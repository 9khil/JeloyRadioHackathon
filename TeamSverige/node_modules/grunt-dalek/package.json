{
  "name": "grunt-dalek",
  "description": "Run browser tests with dalakjs",
  "homepage": "https://github.com/dalekjs/grunt-dalek",
  "version": "0.1.1",
  "author": {
    "name": "Peter Foerger",
    "email": "peter.foerger@dkd.de"
  },
  "contributors": [
    {
      "name": "Sebastian Golasch",
      "email": "public@asciidisco.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/dalekjs/grunt-dalek.git"
  },
  "bugs": {
    "url": "https://github.com/dalekjs/grunt-dalek/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/dalekjs/grunt-dalek/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "dalekjs": "~0.0.1"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-jshint": "~0.6.4",
    "grunt-contrib-yuidoc": "~0.5.0",
    "grunt-contrib-compress": "~0.5.1",
    "grunt-mocha-test": "~0.6.3",
    "grunt-complexity": "~0.1.3",
    "grunt-plato": "~0.2.1",
    "grunt-documantix": "~0.0.3",
    "grunt-include-replace": "~1.1.0",
    "grunt-conventional-changelog": "~1.0.0",
    "grunt-concurrent": "~0.3.1",
    "grunt-bump": "~0.0.11",
    "load-grunt-tasks": "~0.1.0",
    "time-grunt": "~0.1.1",
    "blanket": "~1.1.5",
    "chai": "~1.7.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "dalekjs"
  ],
  "readme": "# grunt-dalek\n\n> Run browser tests with dalak\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-dalek --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-dalek');\n```\n\n## The \"dalek\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `dalek` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  dalek: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.dalekfile\nType: `Boolean`\nDefault: `true`\n\nGrunt should load the config options from your Dalekfile\n\n#### options.browser\nType: `Array`\nDefault: `['phatnomjs']`\n\nThe browsers you would like to test\nNote: For other browsers than PhantomJS, you need to have the Dalek browser plugin installed.\n\n#### options.reporter\nType: `Array`\nDefault: `null`\n\nThe reporters you would like to invoke\nNote: For other reporters than the grunt console output, you need to have the corresponding Dalek reporter plugin installed.\n\n#### options.advanced\nType: `Object`\nDefault: `null`\n\nAll the options you else would define in your Dalekfile.\nThis overwrites the contents of your Dalekfile.\n\n## Examples\n\n### Configuration Example\n\nBasic example of a Grunt config containing the dalek task.\n```js\ngrunt.initConfig({\n  dalek: {\n    dist: {\n      src: ['test/example/test-github.js']\n    }\n  }\n\n});\n\n/**\n * Loads tasks located in the tasks directory.\n */\ngrunt.loadTasks('tasks');\n\ngrunt.registerTask('default', ['dalek']);\n```\n\n### Multiple Files\n\nRunning dalekjs against multiple files.\n```js\ndalek: {\n  dist: {\n    src: ['test/example/test-dkd.js','test/example/test-github.js']\n  }\n}\n```\n\n### Specifying Options\n\n```js\ndalek: {\n    options: {\n      // invoke phantomjs, chrome & chrome canary\n      browser: ['phantomjs', 'chrome', 'chrome:canary'],\n      // generate an html & an jUnit report\n      reporter: ['html', 'junit'],\n      // don't load config from an Dalekfile\n      dalekfile: false,\n      // specify advanced options (that else would be in your Dalekfile)\n      advanced: {\n        // specify a port for chrome\n        browsers: [{\n          chrome: {\n            port: 4000\n          }\n        }]\n      }\n    }\n}\n```\n",
  "readmeFilename": "README.md",
  "_id": "grunt-dalek@0.1.1",
  "dist": {
    "shasum": "93b0ef2778a457d18a4e13b9a2eee5f93a561dfb"
  },
  "_from": "grunt-dalek@~0.1.0",
  "_resolved": "https://registry.npmjs.org/grunt-dalek/-/grunt-dalek-0.1.1.tgz"
}
